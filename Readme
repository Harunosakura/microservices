
A complete sample of Spring microservices on my repository now available.
Including and working together: 
------------------------------------
- Configuration server
- Eureka Naming Server
- Zuul Server
- Setting Service (representing lookups required by other business services). 
    -- It includes Caching for unchangeable lookups using Ehcache 
    -- Sample of Integration Testing
    -- 'test' profile using H2 database
    -- 'prod' profile using PostgreSQL database
- News service call endpoints in Setting service through Zuul using Feign Clients

Supported Features
--------------------------------
Service Bus (Through RabbitMQ)
Sleuth & Zipkin Client Logging (Through RabbitMQ)

Next step working on
--------------------------------

- Authentication Server (oauth2 service)

Required to run the solution
--------------------------------
1- Install zipkin server : https://zipkin.io/
2- Install RabbitMQ : https://lnkd.in/drbDPhr

#springboot #oauth #ehcache #microservices #rabbitmq 

-------------------------
To run multiple instances of same profile in Setting service

- remove property from profile in yml (or properties) file -> server.port 
- on running the war (or jar) set the property -Dserver.port=xxxx example:  
-> -Dspring.profiles.active=prod -Dserver.port=7012
-> -Dspring.profiles.active=prod -Dserver.port=7011

